version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT}:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ConnectionStrings__DefaultConnection=Host=${DB_HOST};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - uploaded_documents:/app/UploadedDocuments
      - ./certs:/https
    restart: unless-stopped

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - app-network

  adminer:
    image: adminer
    restart: always
    ports:
      - "${ADMINER_PORT}:8080"
    networks:
      - app-network
  
  filebrowser:
    image: filebrowser/filebrowser
    ports:
      - "${FILEBROWSER_PORT}:80"
    volumes:
      - uploaded_documents:/srv
      - filebrowser_database:/database
      - filebrowser_config:/config

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  uploaded_documents: 
  filebrowser_database:
  filebrowser_config: